version: 2
jobs:
  setup_dependencies:  # This is the name of the job, feel free to change it to better match what you're trying to do!
    # These next lines defines a Docker executors: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of the convenience images from CircleCI's Developer Hub
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    # The executor is the environment in which the steps below will be executed - below will use a python 3.9 container
    # Change the version below to your required version of python
    docker:
      - image: cimg/python:3.8.1
    # Checkout the code as the first step. This is a dedicated CircleCI step.
    # The python orb's install-packages step will install the dependencies from a Pipfile via Pipenv by default.
    # Here we're making sure we use just use the system-wide pip. By default it uses the project root's requirements.txt.
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      - checkout
      - restore_cache:
          key: deps-{{ checksum "requirements.lock"}}
      - run:
          name: Run tests
          # This assumes pytest is installed via the install-package step above
          command: |
            pip install --user -r requirementx.lock
      - save_cache:
          paths:
            - "~/.local"
          key: deps-{{ checksum "requirements.lock"}}

test:
  docker:
    - image: cimg/python:3.8.1
    - restore_cache:
        key: deps-{{ checksum "requirements.lock"}}
    - run:
      command: |
        python3 -m unittest -v

Workflows:
  version: 2
  all:
    jobs:
      - setup_dependencies
      - test:
          requires:
            -setup_dependencies
